//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Runtime.Serialization;

namespace Dashboard.Common.Connected_Services.GroupIdentificationService
{
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [DataContract(Name="Group", Namespace="http://schemas.datacontract.org/2004/07/Ofa.Profile.Model")]
    public partial class Group : object
    {
        
        private string DisplayNameField;
        
        private GroupIdentificationService.User[] UsersField;
        
        [DataMember()]
        public string DisplayName
        {
            get
            {
                return this.DisplayNameField;
            }
            set
            {
                this.DisplayNameField = value;
            }
        }
        
        [DataMember()]
        public GroupIdentificationService.User[] Users
        {
            get
            {
                return this.UsersField;
            }
            set
            {
                this.UsersField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [DataContract(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Ofa.Profile.Model")]
    public partial class User : object
    {
        
        private string CanonicalNameField;
        
        private string CompanyField;
        
        private string DepartmentField;
        
        private string DisplayNameField;
        
        private string DistinguishedNameField;
        
        private string EmailField;
        
        private string FaxNumberField;
        
        private string GivenNameField;
        
        private string ManagerNetworkNameField;
        
        private string[] MemberOfField;
        
        private string MiddleNameField;
        
        private string MobileNumberField;
        
        private string NetworkNameField;
        
        private byte[] ObjectSidField;
        
        private string[] OwnedGroupsField;
        
        private string SurnameField;
        
        private string TelephoneNumberField;
        
        private string TitleField;
        
        [DataMember()]
        public string CanonicalName
        {
            get
            {
                return this.CanonicalNameField;
            }
            set
            {
                this.CanonicalNameField = value;
            }
        }
        
        [DataMember()]
        public string Company
        {
            get
            {
                return this.CompanyField;
            }
            set
            {
                this.CompanyField = value;
            }
        }
        
        [DataMember()]
        public string Department
        {
            get
            {
                return this.DepartmentField;
            }
            set
            {
                this.DepartmentField = value;
            }
        }
        
        [DataMember()]
        public string DisplayName
        {
            get
            {
                return this.DisplayNameField;
            }
            set
            {
                this.DisplayNameField = value;
            }
        }
        
        [DataMember()]
        public string DistinguishedName
        {
            get
            {
                return this.DistinguishedNameField;
            }
            set
            {
                this.DistinguishedNameField = value;
            }
        }
        
        [DataMember()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [DataMember()]
        public string FaxNumber
        {
            get
            {
                return this.FaxNumberField;
            }
            set
            {
                this.FaxNumberField = value;
            }
        }
        
        [DataMember()]
        public string GivenName
        {
            get
            {
                return this.GivenNameField;
            }
            set
            {
                this.GivenNameField = value;
            }
        }
        
        [DataMember()]
        public string ManagerNetworkName
        {
            get
            {
                return this.ManagerNetworkNameField;
            }
            set
            {
                this.ManagerNetworkNameField = value;
            }
        }
        
        [DataMember()]
        public string[] MemberOf
        {
            get
            {
                return this.MemberOfField;
            }
            set
            {
                this.MemberOfField = value;
            }
        }
        
        [DataMember()]
        public string MiddleName
        {
            get
            {
                return this.MiddleNameField;
            }
            set
            {
                this.MiddleNameField = value;
            }
        }
        
        [DataMember()]
        public string MobileNumber
        {
            get
            {
                return this.MobileNumberField;
            }
            set
            {
                this.MobileNumberField = value;
            }
        }
        
        [DataMember()]
        public string NetworkName
        {
            get
            {
                return this.NetworkNameField;
            }
            set
            {
                this.NetworkNameField = value;
            }
        }
        
        [DataMember()]
        public byte[] ObjectSid
        {
            get
            {
                return this.ObjectSidField;
            }
            set
            {
                this.ObjectSidField = value;
            }
        }
        
        [DataMember()]
        public string[] OwnedGroups
        {
            get
            {
                return this.OwnedGroupsField;
            }
            set
            {
                this.OwnedGroupsField = value;
            }
        }
        
        [DataMember()]
        public string Surname
        {
            get
            {
                return this.SurnameField;
            }
            set
            {
                this.SurnameField = value;
            }
        }
        
        [DataMember()]
        public string TelephoneNumber
        {
            get
            {
                return this.TelephoneNumberField;
            }
            set
            {
                this.TelephoneNumberField = value;
            }
        }
        
        [DataMember()]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                this.TitleField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GroupIdentificationService.IGroups")]
    public interface IGroups
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroups/GetGroup", ReplyAction="http://tempuri.org/IGroups/GetGroupResponse")]
        System.Threading.Tasks.Task<GroupIdentificationService.Group> GetGroupAsync(string groupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroups/GetUsersInGroups", ReplyAction="http://tempuri.org/IGroups/GetUsersInGroupsResponse")]
        System.Threading.Tasks.Task<GroupIdentificationService.User[]> GetUsersInGroupsAsync(string[] groups);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroups/GetUsersInAnyGroups", ReplyAction="http://tempuri.org/IGroups/GetUsersInAnyGroupsResponse")]
        System.Threading.Tasks.Task<GroupIdentificationService.User[]> GetUsersInAnyGroupsAsync(string[] groups);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroups/GetUsers", ReplyAction="http://tempuri.org/IGroups/GetUsersResponse")]
        System.Threading.Tasks.Task<GroupIdentificationService.User[]> GetUsersAsync(string groupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroups/RemoveUserFromGroups", ReplyAction="http://tempuri.org/IGroups/RemoveUserFromGroupsResponse")]
        System.Threading.Tasks.Task RemoveUserFromGroupsAsync(string user, string[] groups);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroups/AddUserToGroups", ReplyAction="http://tempuri.org/IGroups/AddUserToGroupsResponse")]
        System.Threading.Tasks.Task AddUserToGroupsAsync(string user, string[] groups);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public interface IGroupsChannel : GroupIdentificationService.IGroups, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public partial class GroupsClient : System.ServiceModel.ClientBase<GroupIdentificationService.IGroups>, GroupIdentificationService.IGroups
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public GroupsClient() : 
                base(GroupsClient.GetDefaultBinding(), GroupsClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.WSHttpBinding_IGroups.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GroupsClient(EndpointConfiguration endpointConfiguration) : 
                base(GroupsClient.GetBindingForEndpoint(endpointConfiguration), GroupsClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GroupsClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(GroupsClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GroupsClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(GroupsClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GroupsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<GroupIdentificationService.Group> GetGroupAsync(string groupName)
        {
            return base.Channel.GetGroupAsync(groupName);
        }
        
        public System.Threading.Tasks.Task<GroupIdentificationService.User[]> GetUsersInGroupsAsync(string[] groups)
        {
            return base.Channel.GetUsersInGroupsAsync(groups);
        }
        
        public System.Threading.Tasks.Task<GroupIdentificationService.User[]> GetUsersInAnyGroupsAsync(string[] groups)
        {
            return base.Channel.GetUsersInAnyGroupsAsync(groups);
        }
        
        public System.Threading.Tasks.Task<GroupIdentificationService.User[]> GetUsersAsync(string groupName)
        {
            return base.Channel.GetUsersAsync(groupName);
        }
        
        public System.Threading.Tasks.Task RemoveUserFromGroupsAsync(string user, string[] groups)
        {
            return base.Channel.RemoveUserFromGroupsAsync(user, groups);
        }
        
        public System.Threading.Tasks.Task AddUserToGroupsAsync(string user, string[] groups)
        {
            return base.Channel.AddUserToGroupsAsync(user, groups);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.WSHttpBinding_IGroups))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                httpsBindingElement.AuthenticationScheme = System.Net.AuthenticationSchemes.Negotiate;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.WSHttpBinding_IGroups))
            {
                return new System.ServiceModel.EndpointAddress("https://localhost/ADService/Groups.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return GroupsClient.GetBindingForEndpoint(EndpointConfiguration.WSHttpBinding_IGroups);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return GroupsClient.GetEndpointAddress(EndpointConfiguration.WSHttpBinding_IGroups);
        }
        
        public enum EndpointConfiguration
        {
            
            WSHttpBinding_IGroups,
        }
    }
}
