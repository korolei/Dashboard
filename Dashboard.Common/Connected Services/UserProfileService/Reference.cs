//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Runtime.Serialization;

namespace Dashboard.Common.Connected_Services.UserProfileService
{
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [DataContract(Name="ActiveDirectoryField", Namespace="http://schemas.datacontract.org/2004/07/Ofa.Profile.Model")]
    public partial class ActiveDirectoryField : object
    {
        
        private UserProfileService.ActiveDirectoryFieldName NameField;
        
        private string ValueField;
        
        [DataMember()]
        public UserProfileService.ActiveDirectoryFieldName Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [DataMember()]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [DataContract(Name="ActiveDirectoryFieldName", Namespace="http://schemas.datacontract.org/2004/07/Ofa.Profile.Model")]
    public enum ActiveDirectoryFieldName : int
    {
        
        [EnumMember()]
        Unknown = 0,
        
        [EnumMember()]
        Description = 1,
        
        [EnumMember()]
        MiddleInitial = 2,
        
        [EnumMember()]
        Title = 3,
        
        [EnumMember()]
        Department = 4,
        
        [EnumMember()]
        Company = 5,
        
        [EnumMember()]
        NetworkName = 6,
        
        [EnumMember()]
        DisplayName = 7,
        
        [EnumMember()]
        GivenName = 8,
        
        [EnumMember()]
        Surname = 9,
        
        [EnumMember()]
        Office = 10,
        
        [EnumMember()]
        Password = 11,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [DataContract(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Ofa.Profile.Model")]
    public partial class User : object
    {
        
        private string CanonicalNameField;
        
        private string CompanyField;
        
        private string DepartmentField;
        
        private string DisplayNameField;
        
        private string DistinguishedNameField;
        
        private string EmailField;
        
        private string FaxNumberField;
        
        private string GivenNameField;
        
        private string ManagerNetworkNameField;
        
        private string[] MemberOfField;
        
        private string MiddleNameField;
        
        private string MobileNumberField;
        
        private string NetworkNameField;
        
        private byte[] ObjectSidField;
        
        private string[] OwnedGroupsField;
        
        private string SurnameField;
        
        private string TelephoneNumberField;
        
        private string TitleField;
        
        [DataMember()]
        public string CanonicalName
        {
            get
            {
                return this.CanonicalNameField;
            }
            set
            {
                this.CanonicalNameField = value;
            }
        }
        
        [DataMember()]
        public string Company
        {
            get
            {
                return this.CompanyField;
            }
            set
            {
                this.CompanyField = value;
            }
        }
        
        [DataMember()]
        public string Department
        {
            get
            {
                return this.DepartmentField;
            }
            set
            {
                this.DepartmentField = value;
            }
        }
        
        [DataMember()]
        public string DisplayName
        {
            get
            {
                return this.DisplayNameField;
            }
            set
            {
                this.DisplayNameField = value;
            }
        }
        
        [DataMember()]
        public string DistinguishedName
        {
            get
            {
                return this.DistinguishedNameField;
            }
            set
            {
                this.DistinguishedNameField = value;
            }
        }
        
        [DataMember()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [DataMember()]
        public string FaxNumber
        {
            get
            {
                return this.FaxNumberField;
            }
            set
            {
                this.FaxNumberField = value;
            }
        }
        
        [DataMember()]
        public string GivenName
        {
            get
            {
                return this.GivenNameField;
            }
            set
            {
                this.GivenNameField = value;
            }
        }
        
        [DataMember()]
        public string ManagerNetworkName
        {
            get
            {
                return this.ManagerNetworkNameField;
            }
            set
            {
                this.ManagerNetworkNameField = value;
            }
        }
        
        [DataMember()]
        public string[] MemberOf
        {
            get
            {
                return this.MemberOfField;
            }
            set
            {
                this.MemberOfField = value;
            }
        }
        
        [DataMember()]
        public string MiddleName
        {
            get
            {
                return this.MiddleNameField;
            }
            set
            {
                this.MiddleNameField = value;
            }
        }
        
        [DataMember()]
        public string MobileNumber
        {
            get
            {
                return this.MobileNumberField;
            }
            set
            {
                this.MobileNumberField = value;
            }
        }
        
        [DataMember()]
        public string NetworkName
        {
            get
            {
                return this.NetworkNameField;
            }
            set
            {
                this.NetworkNameField = value;
            }
        }
        
        [DataMember()]
        public byte[] ObjectSid
        {
            get
            {
                return this.ObjectSidField;
            }
            set
            {
                this.ObjectSidField = value;
            }
        }
        
        [DataMember()]
        public string[] OwnedGroups
        {
            get
            {
                return this.OwnedGroupsField;
            }
            set
            {
                this.OwnedGroupsField = value;
            }
        }
        
        [DataMember()]
        public string Surname
        {
            get
            {
                return this.SurnameField;
            }
            set
            {
                this.SurnameField = value;
            }
        }
        
        [DataMember()]
        public string TelephoneNumber
        {
            get
            {
                return this.TelephoneNumberField;
            }
            set
            {
                this.TelephoneNumberField = value;
            }
        }
        
        [DataMember()]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                this.TitleField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [DataContract(Name="SearchDepth", Namespace="http://schemas.datacontract.org/2004/07/Ofa.Profile.Model")]
    public enum SearchDepth : int
    {
        
        [EnumMember()]
        None = 0,
        
        [EnumMember()]
        PresentLevel = 1,
        
        [EnumMember()]
        Nested = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserProfileService.IUsers")]
    public interface IUsers
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsers/CreateUser", ReplyAction="http://tempuri.org/IUsers/CreateUserResponse")]
        System.Threading.Tasks.Task<UserProfileService.User> CreateUserAsync(string networkName, UserProfileService.ActiveDirectoryField[] fieldsToUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsers/GetAllUsers", ReplyAction="http://tempuri.org/IUsers/GetAllUsersResponse")]
        System.Threading.Tasks.Task<UserProfileService.User[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsers/GetDirectReports", ReplyAction="http://tempuri.org/IUsers/GetDirectReportsResponse")]
        System.Threading.Tasks.Task<UserProfileService.User[]> GetDirectReportsAsync(string managerNetworkName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsers/GetDirectReportsChain", ReplyAction="http://tempuri.org/IUsers/GetDirectReportsChainResponse")]
        System.Threading.Tasks.Task<UserProfileService.User[]> GetDirectReportsChainAsync(string managerNetworkName, int depth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsers/GetManagers", ReplyAction="http://tempuri.org/IUsers/GetManagersResponse")]
        System.Threading.Tasks.Task<UserProfileService.User[]> GetManagersAsync(string networkName, int depth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsers/GetUser", ReplyAction="http://tempuri.org/IUsers/GetUserResponse")]
        System.Threading.Tasks.Task<UserProfileService.User> GetUserAsync(string networkName, bool loadGroupMemberships);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsers/GetUserAndRoles", ReplyAction="http://tempuri.org/IUsers/GetUserAndRolesResponse")]
        System.Threading.Tasks.Task<UserProfileService.User> GetUserAndRolesAsync(string networkName, UserProfileService.SearchDepth roleSearchDepth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsers/GetUsers", ReplyAction="http://tempuri.org/IUsers/GetUsersResponse")]
        System.Threading.Tasks.Task<UserProfileService.User[]> GetUsersAsync(string groupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsers/GetUsersInAllGroups", ReplyAction="http://tempuri.org/IUsers/GetUsersInAllGroupsResponse")]
        System.Threading.Tasks.Task<UserProfileService.User[]> GetUsersInAllGroupsAsync(string[] groups);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsers/GetUsersInAnyGroups", ReplyAction="http://tempuri.org/IUsers/GetUsersInAnyGroupsResponse")]
        System.Threading.Tasks.Task<UserProfileService.User[]> GetUsersInAnyGroupsAsync(string[] groups);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsers/GetContactByEmail", ReplyAction="http://tempuri.org/IUsers/GetContactByEmailResponse")]
        System.Threading.Tasks.Task<UserProfileService.User> GetContactByEmailAsync(string email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public interface IUsersChannel : UserProfileService.IUsers, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public partial class UsersClient : System.ServiceModel.ClientBase<UserProfileService.IUsers>, UserProfileService.IUsers
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public UsersClient() : 
                base(UsersClient.GetDefaultBinding(), UsersClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.WSHttpBinding_IUsers.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public UsersClient(EndpointConfiguration endpointConfiguration) : 
                base(UsersClient.GetBindingForEndpoint(endpointConfiguration), UsersClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public UsersClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(UsersClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public UsersClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(UsersClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public UsersClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<UserProfileService.User> CreateUserAsync(string networkName, UserProfileService.ActiveDirectoryField[] fieldsToUpdate)
        {
            return base.Channel.CreateUserAsync(networkName, fieldsToUpdate);
        }
        
        public System.Threading.Tasks.Task<UserProfileService.User[]> GetAllUsersAsync()
        {
            return base.Channel.GetAllUsersAsync();
        }
        
        public System.Threading.Tasks.Task<UserProfileService.User[]> GetDirectReportsAsync(string managerNetworkName)
        {
            return base.Channel.GetDirectReportsAsync(managerNetworkName);
        }
        
        public System.Threading.Tasks.Task<UserProfileService.User[]> GetDirectReportsChainAsync(string managerNetworkName, int depth)
        {
            return base.Channel.GetDirectReportsChainAsync(managerNetworkName, depth);
        }
        
        public System.Threading.Tasks.Task<UserProfileService.User[]> GetManagersAsync(string networkName, int depth)
        {
            return base.Channel.GetManagersAsync(networkName, depth);
        }
        
        public System.Threading.Tasks.Task<UserProfileService.User> GetUserAsync(string networkName, bool loadGroupMemberships)
        {
            return base.Channel.GetUserAsync(networkName, loadGroupMemberships);
        }
        
        public System.Threading.Tasks.Task<UserProfileService.User> GetUserAndRolesAsync(string networkName, UserProfileService.SearchDepth roleSearchDepth)
        {
            return base.Channel.GetUserAndRolesAsync(networkName, roleSearchDepth);
        }
        
        public System.Threading.Tasks.Task<UserProfileService.User[]> GetUsersAsync(string groupName)
        {
            return base.Channel.GetUsersAsync(groupName);
        }
        
        public System.Threading.Tasks.Task<UserProfileService.User[]> GetUsersInAllGroupsAsync(string[] groups)
        {
            return base.Channel.GetUsersInAllGroupsAsync(groups);
        }
        
        public System.Threading.Tasks.Task<UserProfileService.User[]> GetUsersInAnyGroupsAsync(string[] groups)
        {
            return base.Channel.GetUsersInAnyGroupsAsync(groups);
        }
        
        public System.Threading.Tasks.Task<UserProfileService.User> GetContactByEmailAsync(string email)
        {
            return base.Channel.GetContactByEmailAsync(email);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.WSHttpBinding_IUsers))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                httpsBindingElement.AuthenticationScheme = System.Net.AuthenticationSchemes.Negotiate;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.WSHttpBinding_IUsers))
            {
                return new System.ServiceModel.EndpointAddress("https://localhost/ADService/Users.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return UsersClient.GetBindingForEndpoint(EndpointConfiguration.WSHttpBinding_IUsers);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return UsersClient.GetEndpointAddress(EndpointConfiguration.WSHttpBinding_IUsers);
        }
        
        public enum EndpointConfiguration
        {
            
            WSHttpBinding_IUsers,
        }
    }
}
